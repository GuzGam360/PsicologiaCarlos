{"version":3,"sources":["components/Navigation.js","components/NotesList.js","components/CreateNote.js","components/Comments.js","PostContent.js","components/PostCard.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","NotesList","state","notes","getNotes","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","_this","setState","data","stop","deleteNote","_callee2","noteId","_context2","delete","this","_this2","map","note","key","_id","title","content","author","format","createdAt","onClick","CreateNote","date","Date","userSelected","users","editing","onSubmit","e","updatedNote","newNote","preventDefault","put","post","window","location","href","onInputChange","Object","defineProperty","target","name","value","onChangeDate","length","user","username","props","match","params","console","log","onChange","required","placeholder","es","selected","Comments","Fragment","class","for","PostContent","components_Comments","PostCard","App","Navigation_Navigation","react_router","path","exact","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a84335bc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/PostCard\">\r\n                        <i className=\"material-icons\">\r\n                            assignment </i> Psicologia\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/PostCard\" className=\"nav-link\">Posts</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/create\" className=\"nav-link\">Create Post</Link>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { format } from 'timeago.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NotesList extends Component {\r\n\r\n    state = {\r\n        notes: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getNotes();\r\n    }\r\n\r\n    getNotes = async () => {\r\n        const res = await axios.get('http://localhost:4000/api/notes')\r\n        this.setState({\r\n            notes: res.data\r\n        });\r\n    }\r\n\r\n    deleteNote = async (noteId) => {\r\n        await axios.delete('http://localhost:4000/api/notes/' + noteId);\r\n        this.getNotes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.state.notes.map(note => (\r\n                        <div className=\"col-md-4 p-2\" key={note._id}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h5>{note.title}</h5>\r\n                                    <Link to={\"/edit/\" + note._id} className=\"btn btn-secondary\">\r\n                                        <i className=\"material-icons\">\r\n                                            border_color</i>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <p>\r\n                                        {note.content}\r\n                                    </p>\r\n                                    <p>\r\n                                        Author: {note.author}\r\n                                    </p>\r\n                                    <p>\r\n                                        {format(note.createdAt)}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <button className=\"btn btn-danger\" onClick={() => this.deleteNote(note._id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport axios from 'axios'\r\n\r\nexport default class CreateNote extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        date: new Date(),\r\n        userSelected: '',\r\n        users: [],\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('http://localhost:4000/api/users');\r\n        if (res.data.length > 0) {\r\n            this.setState({\r\n                users: res.data.map(user => user.username),\r\n                userSelected: res.data[0].username\r\n            })\r\n        }\r\n        if (this.props.match.params.id) {\r\n            console.log(this.props.match.params.id)\r\n            const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\r\n            console.log(res.data)\r\n            this.setState({\r\n                title: res.data.title,\r\n                content: res.data.content,\r\n                date: new Date(res.data.date),\r\n                userSelected: res.data.author,\r\n                _id: res.data._id,\r\n                editing: true\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (this.state.editing) {\r\n            const updatedNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: this.state.userSelected,\r\n                date: this.state.date\r\n            };\r\n            await axios.put('http://localhost:4000/api/notes/' + this.state._id, updatedNote);\r\n        } else {\r\n            const newNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: this.state.userSelected,\r\n                date: this.state.date\r\n            };\r\n            axios.post('http://localhost:4000/api/notes', newNote);\r\n        }\r\n        window.location.href = '/';\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate = date => {\r\n        this.setState({ date });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Create a Post</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* SELECT THE USER */}\r\n                        <div className=\"form-group\">\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={this.state.userSelected}\r\n                                onChange={this.onInputChange}\r\n                                name=\"userSelected\"\r\n                                required>\r\n                                {\r\n                                    this.state.users.map(user => (\r\n                                        <option key={user} value={user}>\r\n                                            {user}\r\n                                        </option>\r\n                                    ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group mt-2\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Title\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group mt-2\">\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Content\"\r\n                                name=\"content\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.content}\r\n                                required>\r\n                            </textarea>\r\n                        </div>\r\n                        {/* Note Date */}\r\n                        <div className=\"form-group mt-2\">\r\n                            <DatePicker className=\"form-control\" selected={this.state.date} onChange={this.onChangeDate} />\r\n                        </div>\r\n                        <button className=\"btn btn-primary mt-2\">\r\n                            Save <i className=\"material-icons\">\r\n                                assignment\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Comments = () => {\r\n\r\n    return (\r\n        <>\r\n            <div class=\"row g-2\">\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-floating\">\r\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"name\" />\r\n                        <label for=\"floatingInputGrid\">User Name</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-floating\">\r\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"01-800-0000\" />\r\n                        <label for=\"floatingInputGrid\">Phone Number</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-floating\">\r\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"name@example.com\" />\r\n                        <label for=\"floatingInputGrid\">User e-mail</label>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"row g-2 mt-1\">\r\n\r\n                <div className=\"form-floating mt-2 \">\r\n                    <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\"></textarea>\r\n                    <label for=\"floatingTextarea2\">Leave a Comment</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating mt-2 col-md-3\">\r\n                    <button type=\"button\" class=\"btn btn-primary btn-lg mt\">Large button</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments","import React from \"react\";\r\nimport Comments from \"./components/Comments\";\r\n\r\nfunction PostContent() {\r\n    return (\r\n        <>\r\n            <div className=\"card bg-dark mt-3 ms-1 me-1 rounded-3 py-3\">\r\n                <div className=\"card-body text-white\">\r\n                    <h1 className=\"card-title \">Help</h1>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Anonymous User</h6>\r\n                    <p className=\"card-text pt-3\">Some quick example text to build</p>\r\n                </div>\r\n            </div>\r\n\r\n            <h1 className=\"mt-3 ms-1 text-white\">Messages</h1>\r\n\r\n            <Comments/>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostContent","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction PostCard() {\r\n    \r\n    return(\r\n        <div className=\"card bg-dark mt-3 ms-3 me-3 rounded-3\">\r\n            <div className=\"card-body text-white\">\r\n                <h5 className=\"card-title \">Post Title</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Anonymous User</h6>\r\n                <p className=\"card-text\">Some quick example text to build</p>\r\n            </div>\r\n\r\n        <Link className=\"ButtonGoToPost\" to=\"/PostContent\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg ms-3 mb-3\">Go to Post</button>\r\n        </Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCard;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Navigation from './components/Navigation'\r\nimport NotesList from './components/NotesList'\r\nimport CreateNote from './components/CreateNote'\r\n// import CreateUser from './components/CreateUser'\r\n\r\nimport './App.css';\r\nimport PostContent from './PostContent';\r\nimport PostCard from './components/PostCard';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n\r\n      <div className=\"container p-4\">\r\n        <Route path=\"/\" exact component={NotesList} />\r\n        <Route path=\"/edit/:id\" component={CreateNote} />\r\n        <Route path=\"/create\" component={CreateNote} />\r\n        <Route path=\"/PostCard\" component={PostCard}/>\r\n        <Route path=\"/PostContent\" component={PostContent}/>\r\n        {/* <Route path=\"/user\" component={CreateUser} /> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}