{"version":3,"sources":["components/Navigation.js","components/NotesList.js","components/CreateNote.js","components/Comments.js","PostContent.js","components/PostCard.js","components/LeftCard.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","NotesList","state","notes","getNotes","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","_this","setState","data","stop","deleteNote","_callee2","noteId","_context2","delete","this","_this2","map","note","key","_id","title","content","author","format","createdAt","onClick","CreateNote","date","Date","userSelected","users","editing","onSubmit","e","updatedNote","newNote","preventDefault","put","post","window","location","href","onInputChange","Object","defineProperty","target","name","value","onChangeDate","length","user","username","props","match","params","console","log","onChange","required","placeholder","es","selected","Comments","Fragment","class","for","PostContent","components_Comments","PostCard","LeftCard","App","Navigation_Navigation","components_LeftCard","react_router","path","exact","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.898679bd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <i className=\"material-icons\">\n              assignment </i> Psicologia\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item active\">\n                <Link to=\"/PostCard\" className=\"nav-link\">Posts</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/create\" className=\"nav-link\">Create Post</Link>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link to=\"/user\" className=\"nav-link\">Create User</Link>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { format } from 'timeago.js'\nimport { Link } from 'react-router-dom'\n\nexport default class NotesList extends Component {\n\n  state = {\n    notes: []\n  }\n\n  async componentDidMount() {\n    this.getNotes();\n  }\n\n  getNotes = async () => {\n    const res = await axios.get('http://localhost:4000/api/notes')\n    this.setState({\n      notes: res.data\n    });\n  }\n\n  deleteNote = async (noteId) => {\n    await axios.delete('http://localhost:4000/api/notes/' + noteId);\n    this.getNotes();\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {\n          this.state.notes.map(note => (\n            <div className=\"col-md-4 p-2\" key={note._id}>\n              <div className=\"card\">\n                <div className=\"card-header d-flex justify-content-between\">\n                  <h5>{note.title}</h5>\n                  <Link to={\"/edit/\" + note._id} className=\"btn btn-secondary\">\n                    <i className=\"material-icons\">\n                      border_color</i>\n                  </Link>\n                </div>\n                <div className=\"card-body\">\n                  <p>\n                    {note.content}\n                  </p>\n                  <p>\n                    Author: {note.author}\n                  </p>\n                  <p>\n                    {format(note.createdAt)}\n                  </p>\n                </div>\n                <div className=\"card-footer\">\n                  <button className=\"btn btn-danger\" onClick={() => this.deleteNote(note._id)}>\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport axios from 'axios'\n\nexport default class CreateNote extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        date: new Date(),\n        userSelected: '',\n        users: [],\n        editing: false,\n        _id: ''\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('http://localhost:4000/api/users');\n        if (res.data.length > 0) {\n            this.setState({\n                users: res.data.map(user => user.username),\n                userSelected: res.data[0].username\n            })\n        }\n        if (this.props.match.params.id) {\n            console.log(this.props.match.params.id)\n            const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\n            console.log(res.data)\n            this.setState({\n                title: res.data.title,\n                content: res.data.content,\n                date: new Date(res.data.date),\n                userSelected: res.data.author,\n                _id: res.data._id,\n                editing: true\n            });\n        }\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        if (this.state.editing) {\n            const updatedNote = {\n                title: this.state.title,\n                content: this.state.content,\n                author: this.state.userSelected,\n                date: this.state.date\n            };\n            await axios.put('http://localhost:4000/api/notes/' + this.state._id, updatedNote);\n        } else {\n            const newNote = {\n                title: this.state.title,\n                content: this.state.content,\n                author: this.state.userSelected,\n                date: this.state.date\n            };\n            axios.post('http://localhost:4000/api/notes', newNote);\n        }\n        window.location.href = '/';\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeDate = date => {\n        this.setState({ date });\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"card card-body\">\n                    <h4>Create a Post</h4>\n                    <form onSubmit={this.onSubmit}>\n                        {/* SELECT THE USER */}\n                        <div className=\"form-group\">\n                            <select\n                                className=\"form-control\"\n                                value={this.state.userSelected}\n                                onChange={this.onInputChange}\n                                name=\"userSelected\"\n                                required>\n                                {\n                                    this.state.users.map(user => (\n                                        <option key={user} value={user}>\n                                            {user}\n                                        </option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                        {/* Note Title */}\n                        <div className=\"form-group mt-2\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Title\"\n                                onChange={this.onInputChange}\n                                name=\"title\"\n                                value={this.state.title}\n                                required />\n                        </div>\n                        {/* Note Content */}\n                        <div className=\"form-group mt-2\">\n                            <textarea\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Content\"\n                                name=\"content\"\n                                onChange={this.onInputChange}\n                                value={this.state.content}\n                                required>\n                            </textarea>\n                        </div>\n                        {/* Note Date */}\n                        <div className=\"form-group mt-2\">\n                            <DatePicker className=\"form-control\" selected={this.state.date} onChange={this.onChangeDate} />\n                        </div>\n                        <button className=\"btn btn-primary mt-2\">\n                            Save <i className=\"material-icons\">\n                                assignment\n</i>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\n\nconst Comments = () => {\n\n    return (\n        <>\n            <div class=\"row g-2\">\n                <div class=\"col-md-4\">\n                    <div class=\"form-floating\">\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"name\" />\n                        <label for=\"floatingInputGrid\">User Name</label>\n                    </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                    <div class=\"form-floating\">\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"01-800-0000\" />\n                        <label for=\"floatingInputGrid\">Phone Number</label>\n                    </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                    <div class=\"form-floating\">\n                        <input type=\"email\" class=\"form-control\" id=\"floatingInputGrid\" placeholder=\"name@example.com\" value=\"name@example.com\" />\n                        <label for=\"floatingInputGrid\">User e-mail</label>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"row g-2 mt-1\">\n\n                <div className=\"form-floating mt-2 \">\n                    <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea2\"></textarea>\n                    <label for=\"floatingTextarea2\">Leave a Comment</label>\n                </div>\n\n                <div className=\"form-floating mt-2 col-md-3\">\n                    <button type=\"button\" class=\"btn btn-primary btn-lg mt\">Large button</button>\n                </div>\n\n            </div>\n\n        </>\n    );\n};\n\nexport default Comments","import React from \"react\";\nimport Comments from \"./components/Comments\";\n\nfunction PostContent() {\n    return (\n        <>\n            <div className=\"card bg-dark mt-3 ms-1 me-1 rounded-3 py-3\">\n                <div className=\"card-body text-white\">\n                    <h1 className=\"card-title \">Help</h1>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Anonymous User</h6>\n                    <p className=\"card-text pt-3\">Some quick example text to build</p>\n                </div>\n            </div>\n\n            <h1 className=\"mt-3 ms-1 text-white\">Messages</h1>\n\n            <Comments/>\n\n        </>\n    );\n}\n\nexport default PostContent","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nfunction PostCard() {\n\n  return (\n    <div className=\"card bg-dark mt-3 ms-3 me-3 rounded-3\">\n      <div className=\"card-body text-white\">\n        <h5 className=\"card-title \">Post Title</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Anonymous User</h6>\n        <p className=\"card-text\">Some quick example text to build</p>\n      </div>\n\n      <Link to=\"/PostContent\" className=\"ButtonGoToPost\">\n        <button type=\"button\" class=\"btn btn-primary btn-lg ms-3 mb-3\">Go to Post</button>\n      </Link>\n\n    </div>\n  );\n}\n\nexport default PostCard;\n","import React from \"react\";\n\nconst LeftCard = () => {\n    return (\n        <>\n\n            <div className=\"Container\">\n                <div className=\"row\">\n\n                    <div className=\"card mx-2 my-3 col-md\">\n                        {/* style=\"width: 18rem;\" */}\n                        {/* <img src=\"...\" class=\"card-img-top\" alt=\"...\" /> */}\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Doctor Octavio Cuellar</h5>\n                            <p className=\"card-text\">Telefono: 81 1017 9225</p>\n                            <p className=\"card-text\">email: Doc.OcC@example.com</p>\n                            {/* <a href=\"#\" class =\"btn btn-primary\">Go somewhere</a> */}\n                        </div>\n                    </div>\n\n                    <div className=\"card mx-2 my-3 col-md\">\n                        {/* style=\"width: 18rem;\" */}\n                        {/* <img src=\"...\" class=\"card-img-top\" alt=\"...\" /> */}\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Doctor Kurt Connors</h5>\n                            <p className=\"card-text\">Telefono: 81 1017 9225</p>\n                            <p className=\"card-text\">email: Doc.Kurt.Lizzard@example.com</p>\n                            {/* <a href=\"#\" class =\"btn btn-primary\">Go somewhere</a> */}\n                        </div>\n                    </div>\n\n                    <div className=\"card mx-2 my-3 col-md\">\n                        {/* style=\"width: 18rem;\" */}\n                        {/* <img src=\"...\" class=\"card-img-top\" alt=\"...\" /> */}\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Doctor Esteban Vincent</h5>\n                            <p className=\"card-text\">Telefono: 81 1017 9225</p>\n                            <p className=\"card-text\">email: Doc.Esteban.Strange@example.com</p>\n                            {/* <a href=\"#\" class =\"btn btn-primary\">Go somewhere</a> */}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default LeftCard;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { HashRouter, Redirect, Route } from 'react-router-dom'\n\nimport Navigation from './components/Navigation'\nimport NotesList from './components/NotesList'\nimport CreateNote from './components/CreateNote'\n// import CreateUser from './components/CreateUser'\n\nimport './App.css';\nimport PostContent from './PostContent';\nimport PostCard from './components/PostCard';\nimport LeftCard from './components/LeftCard';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <div className=\"container\">\n        <div className=\"Row\">\n          <div className=\"col\">\n            <LeftCard />\n          </div>\n        </div>\n\n        <div className=\"container p-4\">\n          <Route path=\"/\" exact component={NotesList} />\n          <Route path=\"/edit/:id\" component={CreateNote} />\n          <Route path=\"/create\" component={CreateNote} />\n          <Route path=\"/PostCard\" component={PostCard} />\n          <Route path=\"/PostContent\" component={PostContent} />\n          {/* <Route path=\"/user\" component={CreateUser} /> */}\n          <Redirect to='/' />\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}